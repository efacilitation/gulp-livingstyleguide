// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var PLUGIN_NAME, Vinyl, cheerio, exec, fs, gutil, html, jade, path, through, _;

  PLUGIN_NAME = 'gulp-livingstyleguide';

  fs = require('fs');

  path = require('path');

  exec = require('child_process').exec;

  _ = require('lodash');

  gutil = require('gulp-util');

  through = require('through2');

  Vinyl = require('vinyl');

  cheerio = require('cheerio');

  jade = require('jade');

  html = require('html');

  module.exports = function(options) {
    var flushFunc, transformFunc;
    if (options == null) {
      options = {};
    }
    _.defaults(options, {
      template: "" + __dirname + "/styleguide.jade"
    });
    transformFunc = function(file, enc, next) {
      var err, styleguideFilePath;
      if (file.isStream()) {
        err = new gutil.PluginError(PLUGIN_NAME, 'Streaming not supported');
        this.emit('error', err);
        return next();
      }
      styleguideFilePath = file.path.replace(/\..*$/g, '');
      return exec("livingstyleguide compile " + file.path + ";", (function(_this) {
        return function(error, stdout, stderr) {
          var $, cssVinyl, styleguide, styleguideCssFilePath, styleguideFragment, styleguideHtmlFilePath, tempStyleguide;
          if (error) {
            err = new gutil.PluginError(PLUGIN_NAME, error);
            _this.emit('error', err);
            return next();
          }
          styleguideHtmlFilePath = "" + styleguideFilePath + ".html";
          styleguideCssFilePath = "" + styleguideFilePath + ".css";
          tempStyleguide = fs.readFileSync(styleguideHtmlFilePath);
          fs.unlink(styleguideHtmlFilePath);
          file.path = styleguideHtmlFilePath;
          $ = cheerio.load(tempStyleguide);
          styleguideFragment = $('.livingstyleguide--container').html();
          styleguide = jade.renderFile(options.template, {
            stylesheet: '<link rel="stylesheet", type="text/css", href="' + path.basename(styleguideCssFilePath + '">'),
            content: styleguideFragment,
            title: 'Living Style Guide',
            layout: false
          });
          styleguide = html.prettyPrint(styleguide, {
            max_char: 300,
            unformatted: ['b', 'code', 'em', 'pre']
          });
          try {
            file.contents = new Buffer(styleguide);
          } catch (_error) {
            error = _error;
            err = new gutil.PluginError(PLUGIN_NAME, error);
            _this.emit('error', err);
            return next();
          }
          cssVinyl = new Vinyl({
            cwd: file.cwd,
            base: file.base,
            path: "" + styleguideFilePath + ".css",
            contents: new Buffer($('style').html())
          });
          _this.push(cssVinyl);
          _this.push(file);
          return next();
        };
      })(this));
    };
    flushFunc = function(next) {
      return next();
    };
    return through.obj(transformFunc, flushFunc);
  };

}).call(this);
